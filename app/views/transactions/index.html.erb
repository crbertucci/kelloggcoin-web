<h1>KelloggCoin Ledger</h1>

<!-- Step 1: List all transactions, starting with the ICO -->

<% icotransactions = Transaction.where(from_user_id: nil).all %>

<p>
Transactions
</p>

<ul>
<% for icotransaction in icotransactions %>

<% receiver=User.find_by({"id" => icotransaction["to_user_id"]})%>

<li>Initial Coin Offering: <%= icotransaction["amount"]%> KC to <%=receiver["name"]%></li>
<% end %>


<% transactions = Transaction.where.not(from_user_id: nil).all %>

<% for transaction in transactions %>

<% sender=User.find_by({"id" => transaction["from_user_id"]})%>
<% receiver=User.find_by({"id" => transaction["to_user_id"]})%>

<li><%= transaction["amount"]%> KC from <%=sender["name"]%>  to <%=receiver["name"]%></li>
<% end %>

</ul> 

<!-- Step 2: Calculate and display the balances -->

<p> Balances </P>

 <!-- Display the balances for each user – the expected balances are included with the starter code
 # Use a loop to iterate through each user in the `users` table – don't hard-code – assume that the users and associated data could change
- ActiveRecord supports the SQL aggregate `SUM` function – e.g. `Transaction.where({ "to_user_id" => 123 }).sum("amount")`


Expected balances:
Balance for Brian: 1348 KC
Balance for Ben: 2516 KC
Balance for Evan: 1164 KC
Balance for Anthony: 1456 KC
Balance for Krystina: 3516 KC 
-->